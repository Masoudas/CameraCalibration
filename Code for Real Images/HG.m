function [Hessian,Gradient]=HG(weight,extr_cur,x_cur,P_point,im_coordinate,focal_len,displaced_marker_dis,N,M)
Gradient=zeros(6*M+3*N,1);
Hessian=zeros(6*M+3*N);
Hd_1=zeros(3);
for m=1:M
    for n=1:N
        % Gradient of the objective function for the m^th image of the n^th camera
        Gradient(1+(n-1)*3,1)=Gradient(1+(n-1)*3,1)+weight(m,n)*(- 2*focal_len(1,n)*((im_coordinate(1,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m-1,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m-1,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) - 2*focal_len(1,n)*((im_coordinate(2,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))));
        Gradient(2+(n-1)*3,1)=Gradient(2+(n-1)*3,1)+weight(m,n)*(- 2*focal_len(2,n)*((im_coordinate(1,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m-1,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m-1,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))) - 2*focal_len(2,n)*((im_coordinate(2,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
        Gradient(3+(n-1)*3,1)=Gradient(3+(n-1)*3,1)+weight(m,n)*(2*(im_coordinate(1,1,m,n) - P_point(1,n))*((im_coordinate(1,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m-1,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m-1,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) + 2*(im_coordinate(2,1,m,n) - P_point(1,n))*((im_coordinate(2,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) + 2*(im_coordinate(1,2,m,n) - P_point(2,n))*((im_coordinate(1,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m-1,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m-1,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))) + 2*(im_coordinate(2,2,m,n) - P_point(2,n))*((im_coordinate(2,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
        Gradient(3*N+1+(m-1)*6,1)=Gradient(3*N+1+(m-1)*6,1)+weight(m,n)*(2*((im_coordinate(1,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m-1,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m-1,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3))))*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) + 2*((im_coordinate(1,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m-1,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m-1,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3))))*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3))));
        Gradient(3*N+2+(m-1)*6,1)=Gradient(3*N+2+(m-1)*6,1)+weight(m,n)*(- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n)))*((im_coordinate(1,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m-1,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m-1,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)))*((im_coordinate(1,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m-1,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m-1,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
        Gradient(3*N+3+(m-1)*6,1)=Gradient(3*N+3+(m-1)*6,1)+weight(m,n)*(- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)))*((im_coordinate(1,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m-1,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m-1,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)))*((im_coordinate(1,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m-1,1)*sin(extr_cur(n,2)) + x_cur(2*m-1,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m-1,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m-1,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m-1,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m-1,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
        Gradient(3*N+4+(m-1)*6,1)=Gradient(3*N+4+(m-1)*6,1)+weight(m,n)*(2*((im_coordinate(2,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3))))*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) + 2*((im_coordinate(2,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3))))*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3))));
        Gradient(3*N+5+(m-1)*6,1)=Gradient(3*N+5+(m-1)*6,1)+weight(m,n)*(- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n)))*((im_coordinate(2,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)))*((im_coordinate(2,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
        Gradient(3*N+6+(m-1)*6,1)=Gradient(3*N+6+(m-1)*6,1)+weight(m,n)*(- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)))*((im_coordinate(2,1,m,n) - P_point(1,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(1,n)*(extr_cur(n,4) + x_cur(2*m,2)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + x_cur(2*m,3)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) + x_cur(2*m,1)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)))*((im_coordinate(2,2,m,n) - P_point(2,n))*(extr_cur(n,6) + x_cur(2*m,1)*sin(extr_cur(n,2)) + x_cur(2*m,3)*cos(extr_cur(n,1))*cos(extr_cur(n,2)) - x_cur(2*m,2)*cos(extr_cur(n,2))*sin(extr_cur(n,1))) - focal_len(2,n)*(extr_cur(n,5) + x_cur(2*m,2)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + x_cur(2*m,3)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - x_cur(2*m,1)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))));
              
        % Hessian of the objective function for the m^th image of the n^th camera
        temp(1,1)=4*focal_len(1,n)^2;
        temp(1,3)=- 2*focal_len(1,n)*(im_coordinate(1,1,m,n) - P_point(1,n)) - 2*focal_len(1,n)*(im_coordinate(2,1,m,n) - P_point(1,n));
        temp(1,4)=-2*focal_len(1,n)*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3)));
        temp(1,5)=2*focal_len(1,n)*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n)));
        temp(1,6)=2*focal_len(1,n)*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)));
        temp(1,7)=-2*focal_len(1,n)*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3)));
        temp(1,8)=2*focal_len(1,n)*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n)));
        temp(1,9)=2*focal_len(1,n)*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)));
       
        temp(2,2)=4*focal_len(2,n)^2;
        temp(2,3)=- 2*focal_len(2,n)*(im_coordinate(1,2,m,n) - P_point(2,n)) - 2*focal_len(2,n)*(im_coordinate(2,2,m,n) - P_point(2,n));
        temp(2,4)=-2*focal_len(2,n)*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(2,5)=2*focal_len(2,n)*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)));
        temp(2,6)=2*focal_len(2,n)*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)));
        temp(2,7)=-2*focal_len(2,n)*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(2,8)=2*focal_len(2,n)*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)));
        temp(2,9)=2*focal_len(2,n)*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)));
        
        temp(3,3)=2*(im_coordinate(1,1,m,n) - P_point(1,n))^2 + 2*(im_coordinate(2,1,m,n) - P_point(1,n))^2 + 2*(im_coordinate(1,2,m,n) - P_point(2,n))^2 + 2*(im_coordinate(2,2,m,n) - P_point(2,n))^2;
        temp(3,4)=2*(im_coordinate(1,1,m,n) - P_point(1,n))*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) + 2*(im_coordinate(1,2,m,n) - P_point(2,n))*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(3,5)=- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n)))*(im_coordinate(1,1,m,n) - P_point(1,n)) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)))*(im_coordinate(1,2,m,n) - P_point(2,n));
        temp(3,6)=- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)))*(im_coordinate(1,1,m,n) - P_point(1,n)) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)))*(im_coordinate(1,2,m,n) - P_point(2,n));
        temp(3,7)=2*(im_coordinate(2,1,m,n) - P_point(1,n))*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) + 2*(im_coordinate(2,2,m,n) - P_point(2,n))*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(3,8)=- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n)))*(im_coordinate(2,1,m,n) - P_point(1,n)) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)))*(im_coordinate(2,2,m,n) - P_point(2,n));
        temp(3,9)=- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)))*(im_coordinate(2,1,m,n) - P_point(1,n)) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)))*(im_coordinate(2,2,m,n) - P_point(2,n));
        
        temp(4,4)=2*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))^2 + 2*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))^2;
        temp(4,5)=- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n)))*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)))*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(4,6)=- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)))*(sin(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)))*(sin(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        
        temp(5,5)=2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n)))^2 + 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)))^2;
        temp(5,6)=2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)))*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,1,m,n) - P_point(1,n))) + 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)))*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(1,2,m,n) - P_point(2,n)));
        
        temp(6,6)=2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,1,m,n) - P_point(1,n)))^2 + 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(1,2,m,n) - P_point(2,n)))^2;
        
        temp(7,7)=2*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3)))^2 + 2*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)))^2;
        temp(7,8)=- 2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n)))*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) - 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)))*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
        temp(7,9)=- 2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)))*(sin(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)) - focal_len(1,n)*cos(extr_cur(n,2))*cos(extr_cur(n,3))) - 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)))*(sin(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)) + focal_len(2,n)*cos(extr_cur(n,2))*sin(extr_cur(n,3)));
       
        temp(8,8)=2*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n)))^2 + 2*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)))^2;
        temp(8,9)=2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)))*(focal_len(1,n)*(cos(extr_cur(n,1))*sin(extr_cur(n,3)) + cos(extr_cur(n,3))*sin(extr_cur(n,1))*sin(extr_cur(n,2))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,1,m,n) - P_point(1,n))) + 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)))*(focal_len(2,n)*(cos(extr_cur(n,1))*cos(extr_cur(n,3)) - sin(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) + cos(extr_cur(n,2))*sin(extr_cur(n,1))*(im_coordinate(2,2,m,n) - P_point(2,n)));
        
        temp(9,9)=2*(focal_len(1,n)*(sin(extr_cur(n,1))*sin(extr_cur(n,3)) - cos(extr_cur(n,1))*cos(extr_cur(n,3))*sin(extr_cur(n,2))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,1,m,n) - P_point(1,n)))^2 + 2*(focal_len(2,n)*(cos(extr_cur(n,3))*sin(extr_cur(n,1)) + cos(extr_cur(n,1))*sin(extr_cur(n,2))*sin(extr_cur(n,3))) - cos(extr_cur(n,1))*cos(extr_cur(n,2))*(im_coordinate(2,2,m,n) - P_point(2,n)))^2;
        
        Hessian(1+(n-1)*3:n*3,1+(n-1)*3:n*3)=Hessian(1+(n-1)*3:n*3,1+(n-1)*3:n*3)+weight(m,n)*temp(1:3,1:3);
        Hessian(3*N+1+(m-1)*6:3*N+m*6,3*N+1+(m-1)*6:3*N+m*6)=Hessian(3*N+1+(m-1)*6:3*N+m*6,3*N+1+(m-1)*6:3*N+m*6)+weight(m,n)*temp(4:9,4:9);
        Hessian(1+(n-1)*3:n*3,3*N+1+(m-1)*6:3*N+m*6)=Hessian(1+(n-1)*3:n*3,3*N+1+(m-1)*6:3*N+m*6)+weight(m,n)*temp(1:3,4:9);
    end
    
    % Gradient of the Constraint for the m^th pair of points
    Gradient(3*N+1+(m-1)*6,1)=Gradient(3*N+1+(m-1)*6,1)+2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    Gradient(3*N+2+(m-1)*6,1)=Gradient(3*N+2+(m-1)*6,1)+2*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    Gradient(3*N+3+(m-1)*6,1)=Gradient(3*N+3+(m-1)*6,1)+2*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    Gradient(3*N+4+(m-1)*6,1)=Gradient(3*N+4+(m-1)*6,1)-2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    Gradient(3*N+5+(m-1)*6,1)=Gradient(3*N+5+(m-1)*6,1)-2*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    Gradient(3*N+6+(m-1)*6,1)=Gradient(3*N+6+(m-1)*6,1)-2*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3))*((x_cur(2*m-1,1) - x_cur(2*m,1))^2 + (x_cur(2*m-1,2) - x_cur(2*m,2))^2 + (x_cur(2*m-1,3) - x_cur(2*m,3))^2 - displaced_marker_dis^2);
    
    
    % Hessian of the Constraint for the m^th pair of points
    % Hd^1_m
    Hd_1(1,1)=4*(x_cur(2*m-1,1) - x_cur(2*m,1))^2 + 4*(x_cur(2*m-1,2) - x_cur(2*m,2))^2 + 4*(x_cur(2*m-1,3) - x_cur(2*m,3))^2 + 2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))^2 - 4*displaced_marker_dis^2;
    Hd_1(1,2)=2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2));
    Hd_1(1,3)=2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3));
    
    Hd_1(2,1)=2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2));
    Hd_1(2,2)=4*(x_cur(2*m-1,1) - x_cur(2*m,1))^2 + 4*(x_cur(2*m-1,2) - x_cur(2*m,2))^2 + 4*(x_cur(2*m-1,3) - x_cur(2*m,3))^2 + 2*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2))^2 - 4*displaced_marker_dis^2;
    Hd_1(2,3)=2*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2))*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3));
    
    Hd_1(3,1)=2*(2*x_cur(2*m-1,1) - 2*x_cur(2*m,1))*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3));
    Hd_1(3,2)=2*(2*x_cur(2*m-1,2) - 2*x_cur(2*m,2))*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3));
    Hd_1(3,3)=4*(x_cur(2*m-1,1) - x_cur(2*m,1))^2 + 4*(x_cur(2*m-1,2) - x_cur(2*m,2))^2 + 4*(x_cur(2*m-1,3) - x_cur(2*m,3))^2 + 2*(2*x_cur(2*m-1,3) - 2*x_cur(2*m,3))^2 - 4*displaced_marker_dis^2;
    
    Hessian(3*N+1+(m-1)*6:3*N+6+(m-1)*6,3*N+1+(m-1)*6:3*N+6+(m-1)*6)=Hessian(3*N+1+(m-1)*6:3*N+6+(m-1)*6,3*N+1+(m-1)*6:3*N+6+(m-1)*6)+[Hd_1 -Hd_1;-Hd_1 Hd_1];
    end
Hessian=triu(Hessian,1)'+triu(Hessian);
%Hessian=(triu(ones(6*M+3*N),+1).*Hessian)'+triu(ones(6*M+3*N)).*Hessian;
end